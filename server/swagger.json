{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server Twitter server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
    "version": "1.0.0",
    "title": "Swagger Petstore",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/users": {
      "get": {
        "tags": ["users"],
        "summary": "Retrieve a list of JSONPlaceholder users.",
        "description": "Retrieve a list of users from JSONPlaceholder.",
        "responses": {
          "200": {
            "description": "A list of users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The user ID.",
                            "example": 0
                          },
                          "username": {
                            "type": "string",
                            "description": "The user's username.",
                            "example": "Leanne Graham"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["users"],
        "summary": "Retrieve a list of JSONPlaceholder users.",
        "description": "Retrieve a list of users from JSONPlaceholder.",
        "parameters": [
          {
            "in": "body",
            "name": "user body",
            "required": true,
            "description": "Numeric ID of the user to retrieve.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The user ID.",
                            "example": 0
                          },
                          "username": {
                            "type": "string",
                            "description": "The user's username.",
                            "example": "Leanne Graham"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["users"],
        "summary": "Retrieve a single JSONPlaceholder user.",
        "description": "Retrieve a single JSONPlaceholder user. Can be used to populate a user profile when prototyping or testing an API.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Numeric ID of the user to retrieve.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The user ID.",
                          "example": 0
                        },
                        "username": {
                          "type": "string",
                          "description": "The user's name.",
                          "example": "Leanne Graham"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Retrieve a list of JSONPlaceholder users.",
        "description": "Retrieve a list of users from JSONPlaceholder.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Numeric ID of the user to retrieve.",
            "schema": {
              "$ref": "#/definitions/Tweet",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The user ID.",
                            "example": 0
                          },
                          "username": {
                            "type": "string",
                            "description": "The user's username.",
                            "example": "Leanne Graham"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tweets": {
      "get": {
        "tags": ["tweets"],
        "summary": "Retrieve a list of JSONPlaceholder users.",
        "description": "Retrieve a list of users from JSONPlaceholder. Can be used to populate a list of fake users when prototyping or testing an API.",
        "responses": {
          "200": {
            "description": "A list of tweets.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The user ID.",
                            "example": 0
                          },
                          "user_id": {
                            "type": "integer",
                            "description": "The user ID.",
                            "example": 0
                          },
                          "tweet_content": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "Leanne Graham"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["tweets"],
        "summary": "Retrieve a list of JSONPlaceholder users.",
        "description": "Retrieve a list of users from JSONPlaceholder. Can be used to populate a list of fake users when prototyping or testing an API.",
        "parameters": [
          {
            "in": "body",
            "name": "tweet  body",
            "required": true,
            "description": "Numeric ID of the user and tweet content.",
            "schema": {
              "$ref": "#/definitions/Tweet",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of tweets.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The user ID.",
                            "example": 0
                          },
                          "user_id": {
                            "type": "integer",
                            "description": "The user ID.",
                            "example": 0
                          },
                          "tweet_content": {
                            "type": "string",
                            "description": "The user's tweet.",
                            "example": "Leanne Graham"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tweets/{id}": {
      "get": {
        "tags": ["tweets"],
        "summary": "Retrieve a single JSONPlaceholder user.",
        "description": "Retrieve a single JSONPlaceholder user. Can be used to populate a user profile when prototyping or testing an API.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Numeric ID of the user to retrieve.",
            "schema": {
              "$ref": "#/definitions/Tweet",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The user ID.",
                          "example": 0
                        },
                        "username": {
                          "type": "string",
                          "description": "The user's name.",
                          "example": "Leanne Graham"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["tweets"],
        "summary": "Retrieve a single JSONPlaceholder user.",
        "description": "Retrieve a single JSONPlaceholder user. Can be used to populate a user profile when prototyping or testing an API.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Numeric ID of the user to retrieve.",
            "schema": {
              "$ref": "#/definitions/Tweet",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The user ID.",
                          "example": 0
                        },
                        "username": {
                          "type": "string",
                          "description": "The user's name.",
                          "example": "Leanne Graham"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        }
      }
    },

    "Tweet": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "string"
        }
      }
    }
  }
}
